/*
 * Copyright (c) 2024 Yahweasel
 *
 * Permission to use, copy, modify, and/or distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY
 * SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION
 * OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN
 * CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

/**
 * Convert a time to a timestamp.
 */
function toStamp(time: number) {
    if (time < 0) time = 0;
    const h = Math.floor(time / 3600);
    time -= h * 3600;
    const m = Math.floor(time / 60);
    time -= m * 60;

    let hs = "" + h;
    if (hs.length < 2) hs = `0${hs}`;
    let ms = "" + m;
    if (ms.length < 2) ms = `0${ms}`;
    let ss = "" + time;
    if (time < 10) ss = `0${ss}`;
    if (h)
        return `${hs}:${ms}:${ss}`;
    else
        return `${ms}:${ss}`
}

/**
 * Convert these captions to VTT.
 */
export function toVTT(captions: any[], names: Record<number, string>) {
    const ret: string[] = [
        "WEBVTT\n\nNOTE This file generated by Ennuicastr.\n\n"
    ];
    for (const line of captions) {
        if (!("id" in line)) continue;
        const caption: any[] = line.caption;
        if (!caption.length) continue;

        // Timestamp header
        ret.push(
            toStamp(caption[0].start) +
            " --> " +
            toStamp(caption[caption.length-1].end + 3) +
            "\n<c>"
        );

        // Word-by-word
        for (let wi = 0; wi < caption.length; wi++) {
            const word = caption[wi];
            if (names[line.id])
                ret.push(`${names[line.id]}: `);
            if (wi !== 0)
                ret.push(` </c><${toStamp(word.start)}><c>`);
            ret.push(word.word.trim());
        }

        ret.push("</c>\n\n");
    }

    return ret.join("");
}
